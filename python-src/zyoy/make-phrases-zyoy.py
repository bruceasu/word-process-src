#!/usr/bin/env python
# -*- coding:utf-8 -*-
try:
    import psyco
    psyco.full()
    print 'psyco activated.'
except Exception, e:
    pass

import os
import sys
import optparse


def debug(*what):
    print >> sys.stderr, u'[DEBUG]: ', u' '.join(map(unicode, what))


if len(sys.argv) < 2:
    print 'missing source file'
    sys.exit(1)
sourcefile = sys.argv[1]

source_file = open(sourcefile)
phrase_file = open('%s-out' % sourcefile, 'w')
print >> phrase_file, '# %s phrase file generated by make_phrases_zyoy.py'

phrase = u''
syllable_list = u''
freq = 0

for line in source_file:
    try:
        x = line.strip().decode('utf-8')
        if not x or x.startswith(u'#'):
            continue
        phrase, freq_str, syllable_list = x.split(None, 2)
        freq = int(freq_str)
    except Exception, e:
        try:
            print >> sys.stderr, u'error: invalid format (%s) %s' % (x, sourcefile)
        except Exception, e:
            pass
        continue

    if len(phrase) == 1:
        print >> phrase_file, (u'%s\t%s\t%d' % (phrase, syllable_list, freq)).encode('utf-8')
    elif len(phrase) == 2:
        ll = syllable_list.split(None)
        sl = ll[0] + ll[1]
        print >> phrase_file, (u'%s\t%s\t%d' % (phrase, sl, freq)).encode(
            'utf-8')
    elif len(phrase) == 3:
        ll = syllable_list.split(None)
        s1 = ll[0][0]
        s2 = ll[1][0]
        s3 = ll[2]
        sl = s1 + s2 + s3
        print >> phrase_file, (u'%s\t%s\t%d' % (phrase, sl, freq)).encode(
            'utf-8')
    # elif len(phrase) == 4:
    #     ll = syllable_list.split(None)
    #     s1 = ll[0][0]
    #     s2 = ll[1][0]
    #     s3 = ll[2][0]
    #     s4 = ll[3][0]
    #     sl = s1 + s2 + s3 + s4
    #     print >> phrase_file, (u'%s\t%s\t%d' % (phrase, sl, freq)).encode(
    #         'utf-8')
    # elif len(phrase) == 5:
    #     ll = syllable_list.split(None)
    #     s1 = ll[0][0]
    #     s2 = ll[1][0]
    #     s4 = ll[3][0]
    #     s5 = ll[4][0]
    #     sl = s1 + s2 + s3 + s4 + s5
    #     print >> phrase_file, (u'%s\t%s\t%d' % (phrase, sl, freq)).encode(
    #         'utf-8')
    else:
        ll = syllable_list.split(None)
        s1 = ll[0][0]
        s2 = ll[1][0]
        s3 = ll[2][0]
        # s4 = ll[3][0]
        # s5 = ll[4][0]
        s6 = ll[len(phrase) - 1][0]
        sl = s1 + s2 + s3 + s6
        print >> phrase_file, (u'%s\t%s\t%d' % (phrase, sl, freq)).encode(
            'utf-8')

source_file.close()
phrase_file.close()
print '%s-out written.' % sourcefile
